export interface MdEditorOption {
    showPreviewPanel?: boolean;
    showBorder?: boolean;
    hideIcons?: Array<string>;
    usingFontAwesome5?: boolean;
    fontAwesomeVersion?: '4' | '5' | '6';
    scrollPastEnd?: number;
    enablePreviewContentClick?: boolean;
    resizable?: boolean;
    markedjsOpt?: MarkedjsOption;
    customRender?: CustomRender;
    customIcons?: CustomIconOptions;
    locales?: MdEditorLocaleOptions;
    placeholder?: string;
}
export interface CustomIconOptions {
    Bold?: CustomIcon;
    Italic?: CustomIcon;
    Heading?: CustomIcon;
    Reference?: CustomIcon;
    Link?: CustomIcon;
    Image?: CustomIcon;
    UnorderedList?: CustomIcon;
    OrderedList?: CustomIcon;
    CodeBlock?: CustomIcon;
    ShowPreview?: CustomIcon;
    HidePreview?: CustomIcon;
    FullScreen?: CustomIcon;
    CheckBox_UnChecked?: CustomIcon;
    CheckBox_Checked?: CustomIcon;
}
export interface MdButtonLocale {
    title: string;
}
export interface MdButtonInserterLocale extends MdButtonLocale {
    initText?: string;
}
export interface MdEditorLocale {
    Buttons?: {
        Bold?: MdButtonInserterLocale;
        Italic?: MdButtonInserterLocale;
        Heading?: MdButtonInserterLocale;
        Reference?: MdButtonInserterLocale;
        Link?: MdButtonLocale;
        Image?: MdButtonLocale;
        UnorderedList?: MdButtonInserterLocale;
        OrderedList?: MdButtonInserterLocale;
        CodeBlock?: MdButtonInserterLocale;
        ShowPreview?: MdButtonLocale;
        HidePreview?: MdButtonLocale;
        Fullscreen?: MdButtonLocale;
    };
    Upload?: {
        Drag?: string;
        Uploading?: string;
    };
}
export interface MdEditorLocaleOptions {
    [key: string]: MdEditorLocale;
}
export declare const DEFAULT_LOCALES: MdEditorLocaleOptions;
export interface UploadResult {
    isImg: boolean;
    name: string;
    url: string;
}
export interface MarkedjsOption {
    baseUrl?: string;
    breaks?: boolean;
    gfm?: boolean;
    headerIds?: boolean;
    headerPrefix?: string;
    langPrefix?: string;
    mangle?: boolean;
    pedantic?: boolean;
    sanitize?: boolean;
    sanitizer?: Function;
    silent?: boolean;
    smartLists?: boolean;
    smartypants?: boolean;
    tables?: boolean;
    xhtml?: boolean;
}
export interface CustomRender {
    image?: Function;
    table?: Function;
    code?: Function;
    listitem?: Function;
}
export interface CustomIcon {
    fontClass: string;
}
export interface DefaultIconOptions {
    fontAwesome4: CustomIconOptions;
    fontAwesome5: CustomIconOptions;
    fontAwesome6: CustomIconOptions;
}
export declare const DEFAULT_ICONS: DefaultIconOptions;
